name: update to latest

on:
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * *"

jobs:
  check:
    strategy:
      # max-parallel: 1
      fail-fast: false
      matrix:
        include:
          - REPO: Wox-launcher/Wox
            DIRECTORY: wox-bin
            SLEEP: 5
          - REPO: hiddify/hiddify-next
            DIRECTORY: hiddify-bin
            SLEEP: 120
          - REPO: LorenEteval/Furious
            DIRECTORY: furious
            SLEEP: 240
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
    outputs:
      wox-bin-result: ${{ steps.draft.outputs.wox-bin-result }}
      hiddify-bin-result: ${{ steps.draft.outputs.hiddify-bin-result }}
      furious-result: ${{ steps.draft.outputs.furious-result }}
    steps:
      - uses: actions/checkout@v4.1.1

      - uses: pozetroninc/github-action-get-latest-release@master
        id: get_release
        with:
          repository: ${{ matrix.REPO }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          pacman -Syu --noconfirm
          pacman -S python python-pip git openssh openssl openssl-1.1 --noconfirm
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install requests
          echo "$DIRECTORY-result=$(python $PY)" >> $GITHUB_OUTPUT
          echo $($DIRECTORY-result)
          rm -rf .venv
        id: draft
        env:
          PKGBUILD: ${{ matrix.DIRECTORY }}/PKGBUILD
          PY: py/${{ matrix.DIRECTORY }}.py
          REPO: ${{ matrix.REPO }}
          LATEST: ${{ steps.get_release.outputs.id }}

      - if: ${{ steps.draft.outputs.result }}!=0
        env:
          result: ${{ steps.draft.outputs.result }}
          DIRECTORY: ${{ matrix.DIRECTORY }}
        run: |
          useradd builder -m
          chmod -R a+rw .
          cd $DIRECTORY
          sudo -u builder makepkg --printsrcinfo > .SRCINFO
          rm -rf file
          cd ..
      - name: push
        uses: crazy-max/ghaction-github-pages@v4.0.0
        with:
          keep_history: true
          allow_empty_commit: false
          commit_message: update version to ${{ steps.draft.outputs.result }}
          target_branch: bot-${{ matrix.DIRECTORY }}
          build_dir: .
          committer: ${{ secrets.COMMITTER }}
          author: ${{ secrets.AUTHOR }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  push:
    needs: check
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        include:
          - REPO: Wox-launcher/Wox
            DIRECTORY: wox-bin
            RESULT: ${{needs.check.outputs.wox-bin-result}}
          - REPO: hiddify/hiddify-next
            DIRECTORY: hiddify-bin
            RESULT: ${{needs.check.outputs.hiddify-bin-result}}
          - REPO: LorenEteval/Furious
            DIRECTORY: furious
            RESULT: ${{needs.check.outputs.furious-result}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        if: ${{ matrix.RESULT }}!=0
        with:
          ref: bot-${{ matrix.DIRECTORY }}
      - uses: webfactory/ssh-agent@v0.8.0
        if: ${{ matrix.RESULT }}!=0
        with:
          ssh-private-key: ${{ secrets.aur }}
          log-public-key: false
      - name: push
        if: ${{ matrix.RESULT }}!=0
        env:
          result: ${{ matrix.RESULT }}
          name: ${{ secrets.name }}
          email: ${{ secrets.email }}
          DIRECTORY: ${{ matrix.DIRECTORY }}
        run: |
          mkdir new
          cd new
          ssh-keyscan -t rsa aur.archlinux.org >> ~/.ssh/known_hosts
          git clone ssh://aur@aur.archlinux.org/$DIRECTORY.git .
          git config --local user.email $email
          git config --local user.name $name
          cp ../$DIRECTORY/PKGBUILD ./
          cp ../$DIRECTORY/.SRCINFO ./
          git add PKGBUILD
          git add .SRCINFO
          git commit -m  "update version to $result"
          git push
          git clone git@github.com:aucub/aur.git
          cp PKGBUILD aur/$DIRECTORY/
          cp .SRCINFO aur/$DIRECTORY/
          cd aur
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          git config --local user.email $email
          git config --local user.name $name
          git add $DIRECTORY/PKGBUILD
          git add $DIRECTORY/.SRCINFO
          git commit -m  "update $DIRECTORY version to $result"
          git push
